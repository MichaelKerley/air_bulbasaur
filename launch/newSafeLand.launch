<launch>


    <node pkg="tf" type="static_transform_publisher" name="tf_down_camera_depth"
        args="0 0 0 1.57 3.14 0 fcu down_camera_link 10" />
    <arg name="safe_landing_camera" default="/down_camera/depth/points" />


    <!-- gazebo configs -->
    <arg name="sdf" default="$(find air_bulbasaur)/models/modalAI/modalAI.sdf" />
    <arg name="world_path" default="$(find air_bulbasaur)/worlds/jetsonTesting.world" />

    <arg name="gui" default="true" />
    <arg name="debug" default="true" />
    <arg name="verbose" default="true" />
    <arg name="paused" default="false" />
    <arg name="respawn_gazebo" default="false" />
    <arg name="lockstep" default="true" />
    <!-- MAVROS configs -->
    <arg name="ns" default="/" />
    <arg name="fcu_url" default="udp://:14540@localhost:14557" />
    <arg name="gcs_url" default="" /> <!-- GCS link is provided by SITL -->
    <arg name="tgt_system" default="1" />
    <arg name="tgt_component" default="1" />
    <arg name="vehicle" default="iris" />
    <param name="use_sim_time" value="true" />

    <!-- Launch rqt_reconfigure -->
    <node pkg="rqt_reconfigure" type="rqt_reconfigure" output="log" name="rqt_reconfigure" />

    <!-- Launch PX4 SITL -->
    <include file="$(find px4)/launch/px4.launch">
        <arg name="vehicle" value="$(arg vehicle)" />
    </include>


    <!-- Launch MavROS -->
    <group ns="$(arg ns)">
        <include file="$(find mavros)/launch/node.launch">
            <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
            <!-- Need to change the config file to get the tf topic and get local position in terms
            of local origin -->
            <arg name="config_yaml" value="$(find avoidance)/resource/px4_config.yaml" />
            <arg name="fcu_url" value="$(arg fcu_url)" />
            <arg name="gcs_url" value="$(arg gcs_url)" />
            <arg name="tgt_system" value="$(arg tgt_system)" />
            <arg name="tgt_component" value="$(arg tgt_component)" />
        </include>
    </group>

    <!-- Launch Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)" />
        <arg name="world_name" value="$(arg world_path)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="verbose" value="$(arg verbose)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)" />
        <arg unless="$(arg lockstep)" name="extra_gazebo_args" value="" />
        <arg if="$(arg lockstep)" name="extra_gazebo_args" value="--lockstep" />
    </include>


    <!-- gazebo model -->
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" output="log"
        args="-sdf -file $(arg sdf) -model $(arg vehicle) " />


    <!-- Launch safe landing planner  The pointcloud_topic is the safe_landing_camera -->
    <node name="safe_landing_planner_node" pkg="safe_landing_planner"
        type="safe_landing_planner_node" output="log">
        <param name="pointcloud_topics" value="$(arg safe_landing_camera)" />
    </node>

    <node name="waypoint_generator_node" pkg="safe_landing_planner" type="waypoint_generator_node"
        output="log"></node>
    <node name="dynparam_slpn" pkg="dynamic_reconfigure" type="dynparam"
        args="load safe_landing_planner_node $(find safe_landing_planner)/cfg/slpn.yaml" />
    <node name="dynparam_wpgn" pkg="dynamic_reconfigure" type="dynparam"
        args="load waypoint_generator_node $(find safe_landing_planner)/cfg/wpgn.yaml" />
    <node name="rviz" pkg="rviz" type="rviz" output="log"
        args="-d $(find air_bulbasaur)/rviz/modalAI.rviz" />


    <!-- JETSON ORIN-->
    <machine
        name="michael"
        address="10.144.166.95"
        env-loader="/opt/ros/noetic/envR1.sh"
        default="true"
        user="michael"
    />


    <!-- SEGNET -->

    <arg name="model_name" default="fcn-resnet18-cityscapes-2048x1024" />

    <arg name="model_path" default="" />

    <arg name="prototxt_path" default="" />

    <arg name="class_labels_path" default="" />

    <arg name="class_colors_path" default="" />

    <arg name="input_blob" default="" />

    <arg name="output_blob" default="" />

    <arg name="mask_filter" default="linear" />

    <arg name="overlay_filter" default="linear" />

    <arg name="overlay_alpha" default="180.0" />


    <node machine="michael" pkg="ros_deep_learning" type="safeland_cv" name="safeland_cv"
        output="screen">
        
        <param name="model_name" value="$(arg model_name)" />

        <param name="model_path" value="$(arg model_path)" />

        <param name="prototxt_path" value="$(arg prototxt_path)" />

        <param name="class_labels_path" value="$(arg class_labels_path)" />

        <param name="class_colors_path" value="$(arg class_colors_path)" />

        <param name="input_blob" value="$(arg input_blob)" />

        <param name="output_blob" value="$(arg output_blob)" />

        <param name="mask_filter" value="$(arg mask_filter)" />

        <param name="overlay_filter" value="$(arg overlay_filter)" />

        <param name="overlay_alpha" value="$(arg overlay_alpha)" />

    </node>


</launch>